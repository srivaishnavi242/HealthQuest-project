{"ast":null,"code":"const express = require('express');\nconst router = express.Router();\n\n// Import your database logic if needed\n// const db = require('../db'); \n\n// This is a simple in-memory store for demonstration.\n// Replace with your database logic as needed.\nlet dashboardData = {\n  dailySteps: 0,\n  stepsGoal: 10000,\n  caloriesBurned: 0,\n  caloriesGoal: 2500\n};\n\n// PUT /api/dashboard - update fitness tracking data\nrouter.put('/', (req, res) => {\n  const {\n    dailySteps,\n    stepsGoal,\n    caloriesBurned,\n    caloriesGoal\n  } = req.body;\n  if (typeof dailySteps === 'number' && typeof stepsGoal === 'number' && typeof caloriesBurned === 'number' && typeof caloriesGoal === 'number') {\n    dashboardData = {\n      dailySteps,\n      stepsGoal,\n      caloriesBurned,\n      caloriesGoal\n    };\n    return res.json({\n      message: 'Dashboard fitness data updated!',\n      data: dashboardData\n    });\n  }\n  res.status(400).json({\n    error: 'Invalid data'\n  });\n});\n\n// GET /api/dashboard - to test the update\nrouter.get('/', (req, res) => {\n  // Add other dashboard fields as needed\n  res.json({\n    bmi: \"23.31\",\n    weight: 65,\n    height: 167,\n    goal: \"loose weight\",\n    ...dashboardData,\n    weeklyActivity: [{\n      scheduled_date: \"2025-05-22\",\n      count: 1\n    }, {\n      scheduled_date: \"2025-05-23\",\n      count: 1\n    }],\n    upcomingWorkouts: [{\n      id: 1,\n      title: \"Pushups\",\n      scheduled_date: \"2025-05-22\"\n    }, {\n      id: 2,\n      title: \"Pilates\",\n      scheduled_date: \"2025-05-23\"\n    }]\n  });\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","dashboardData","dailySteps","stepsGoal","caloriesBurned","caloriesGoal","put","req","res","body","json","message","data","status","error","get","bmi","weight","height","goal","weeklyActivity","scheduled_date","count","upcomingWorkouts","id","title","module","exports"],"sources":["C:/Users/HP/Downloads/healthquest/frontend/src/pages/Dashboard.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\n\n// Import your database logic if needed\n// const db = require('../db'); \n\n// This is a simple in-memory store for demonstration.\n// Replace with your database logic as needed.\nlet dashboardData = {\n  dailySteps: 0,\n  stepsGoal: 10000,\n  caloriesBurned: 0,\n  caloriesGoal: 2500,\n};\n\n// PUT /api/dashboard - update fitness tracking data\nrouter.put('/', (req, res) => {\n  const { dailySteps, stepsGoal, caloriesBurned, caloriesGoal } = req.body;\n  if (\n    typeof dailySteps === 'number' &&\n    typeof stepsGoal === 'number' &&\n    typeof caloriesBurned === 'number' &&\n    typeof caloriesGoal === 'number'\n  ) {\n    dashboardData = { dailySteps, stepsGoal, caloriesBurned, caloriesGoal };\n    return res.json({ message: 'Dashboard fitness data updated!', data: dashboardData });\n  }\n  res.status(400).json({ error: 'Invalid data' });\n});\n\n// GET /api/dashboard - to test the update\nrouter.get('/', (req, res) => {\n  // Add other dashboard fields as needed\n  res.json({\n    bmi: \"23.31\",\n    weight: 65,\n    height: 167,\n    goal: \"loose weight\",\n    ...dashboardData,\n    weeklyActivity: [\n      { scheduled_date: \"2025-05-22\", count: 1 },\n      { scheduled_date: \"2025-05-23\", count: 1 }\n    ],\n    upcomingWorkouts: [\n      { id: 1, title: \"Pushups\", scheduled_date: \"2025-05-22\" },\n      { id: 2, title: \"Pilates\", scheduled_date: \"2025-05-23\" }\n    ]\n  });\n});\n\nmodule.exports = router;"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;;AAE/B;AACA;;AAEA;AACA;AACA,IAAIC,aAAa,GAAG;EAClBC,UAAU,EAAE,CAAC;EACbC,SAAS,EAAE,KAAK;EAChBC,cAAc,EAAE,CAAC;EACjBC,YAAY,EAAE;AAChB,CAAC;;AAED;AACAN,MAAM,CAACO,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC5B,MAAM;IAAEN,UAAU;IAAEC,SAAS;IAAEC,cAAc;IAAEC;EAAa,CAAC,GAAGE,GAAG,CAACE,IAAI;EACxE,IACE,OAAOP,UAAU,KAAK,QAAQ,IAC9B,OAAOC,SAAS,KAAK,QAAQ,IAC7B,OAAOC,cAAc,KAAK,QAAQ,IAClC,OAAOC,YAAY,KAAK,QAAQ,EAChC;IACAJ,aAAa,GAAG;MAAEC,UAAU;MAAEC,SAAS;MAAEC,cAAc;MAAEC;IAAa,CAAC;IACvE,OAAOG,GAAG,CAACE,IAAI,CAAC;MAAEC,OAAO,EAAE,iCAAiC;MAAEC,IAAI,EAAEX;IAAc,CAAC,CAAC;EACtF;EACAO,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACH,IAAI,CAAC;IAAEI,KAAK,EAAE;EAAe,CAAC,CAAC;AACjD,CAAC,CAAC;;AAEF;AACAf,MAAM,CAACgB,GAAG,CAAC,GAAG,EAAE,CAACR,GAAG,EAAEC,GAAG,KAAK;EAC5B;EACAA,GAAG,CAACE,IAAI,CAAC;IACPM,GAAG,EAAE,OAAO;IACZC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,GAAG;IACXC,IAAI,EAAE,cAAc;IACpB,GAAGlB,aAAa;IAChBmB,cAAc,EAAE,CACd;MAAEC,cAAc,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC1C;MAAED,cAAc,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAE,CAAC,CAC3C;IACDC,gBAAgB,EAAE,CAChB;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,SAAS;MAAEJ,cAAc,EAAE;IAAa,CAAC,EACzD;MAAEG,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,SAAS;MAAEJ,cAAc,EAAE;IAAa,CAAC;EAE7D,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFK,MAAM,CAACC,OAAO,GAAG5B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}